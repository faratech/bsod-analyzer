events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    server {
        listen 8080;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' https://generativelanguage.googleapis.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://esm.sh; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com;" always;

        # Block access to sensitive directories and files
        location ~ ^/(public|src|components|pages|services|hooks|types|node_modules|\.git) {
            deny all;
            return 403;
        }
        
        # Block sensitive file types
        location ~* \.(ts|tsx|js\.map|css\.map|log|env|gitignore)$ {
            deny all;
            return 403;
        }
        
        # Block config files
        location ~* (package.*\.json|tsconfig\.json|vite\.config\.ts|\.env.*|deploy.*\.sh|Dockerfile|cloudbuild\.yaml)$ {
            deny all;
            return 403;
        }

        # Cache static assets with proper extensions
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Special handling for important files
        location = /sitemap.xml {
            expires 1d;
            add_header Cache-Control "public";
        }
        
        location = /robots.txt {
            expires 1d;
            add_header Cache-Control "public";
        }
        
        location = /ads.txt {
            expires 1d;
            add_header Cache-Control "public";
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint for Cloud Run
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}